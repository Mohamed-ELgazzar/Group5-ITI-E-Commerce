package com.example.demo.repository.entities;
// Generated Mar 7, 2023, 7:21:08 PM by Hibernate Tools 6.2.0.CR1


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Timestamp;

/**
 * OrderDetails generated by hbm2java
 */
@Entity
@Table(name="order_details"
    ,catalog="flamingoo"
)
public class OrderDetails  implements java.io.Serializable {


     private Integer id;
     private User user;
     private Timestamp deleverDate;
     private Timestamp orderDate;
     private String status;
     private String paymentMethod;
     private String totalPrice;
     private Short numberOfItems;
     private OrderProducts orderProducts;

    public OrderDetails() {
    }

	
    public OrderDetails(User user, Timestamp orderDate, String status) {
        this.user = user;
        this.orderDate = orderDate;
        this.status = status;
    }
    public OrderDetails(User user, Timestamp deleverDate, Timestamp orderDate, String status, String paymentMethod, String totalPrice, Short numberOfItems, OrderProducts orderProducts) {
       this.user = user;
       this.deleverDate = deleverDate;
       this.orderDate = orderDate;
       this.status = status;
       this.paymentMethod = paymentMethod;
       this.totalPrice = totalPrice;
       this.numberOfItems = numberOfItems;
       this.orderProducts = orderProducts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="delever_date", length=19)
    public Timestamp getDeleverDate() {
        return this.deleverDate;
    }
    
    public void setDeleverDate(Timestamp deleverDate) {
        this.deleverDate = deleverDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="order_date", nullable=false, length=19)
    public Timestamp getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Timestamp orderDate) {
        this.orderDate = orderDate;
    }

    
    @Column(name="status", nullable=false, length=45)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="payment_method", length=45)
    public String getPaymentMethod() {
        return this.paymentMethod;
    }
    
    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    
    @Column(name="total_price", length=45)
    public String getTotalPrice() {
        return this.totalPrice;
    }
    
    public void setTotalPrice(String totalPrice) {
        this.totalPrice = totalPrice;
    }

    
    @Column(name="number_of_items")
    public Short getNumberOfItems() {
        return this.numberOfItems;
    }
    
    public void setNumberOfItems(Short numberOfItems) {
        this.numberOfItems = numberOfItems;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="orderDetails")
    public OrderProducts getOrderProducts() {
        return this.orderProducts;
    }
    
    public void setOrderProducts(OrderProducts orderProducts) {
        this.orderProducts = orderProducts;
    }




}


